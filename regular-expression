正则指引
第一章
字符组
\d (digit) 等价于 [0-9]
\s (space) 等价于 [ \t\r\n\v\f]
\w (word) 等价于 [0-9a-zA-Z_]
\S \D \W 和 \s \d \w恰好相反，所以[\s\S] [\d\D] [\w\W] 可以匹配任意字符
. 能匹配任意字符，但不能匹配换行符'\n'

第二章
量词
—————————————————————————————————————————————————————————————
常用量词 | {m,n}等价形式  注：逗号后面没有空格
—————————————————————————————————————————————————————————————
   *     | {0,}
—————————————————————————————————————————————————————————————
   +     | {1,}
—————————————————————————————————————————————————————————————
   ?     | {0,1}
—————————————————————————————————————————————————————————————

匹配HTML tag,如<table> <img> <head> : <[^>]+>
open tag : <[^/>][^>]*>
close tag : </[^>]+>
self-closing tag : <[^>/]+/>
其实<[^/>][^>]*>也可以匹配 self-closing tag, <[^/>][^>]*[^/]> 就可以保证匹配的open tag不会以/>结尾了。但无法匹配如<u>这样的tag
贪婪匹配之优先匹配量词：
".*"  去匹配 "quoted string" and another" 得到 "quoted string and another",
"[^"]*" 匹配其得到 "quoted string"
贪婪匹配，一开始匹配全部，当把文本字符全部匹配完后，发现pattern还有式子没有匹配，查询之前保存的备用状态，如果发现有能匹配的，
就看能不能退回几步，这就是回溯。让.*"反悔"匹配，交给pattern后面的式子进行匹配。

忽略优先量词：
[\s\S]*
[\s\S]*?      忽略优先量词  *?和*限定的元素出现次数范围与*完全一样
遇到[\s\S]能匹配的字符，先尝试"忽略",如果pattern中后面的元素不能匹配，再尝试匹配。

忽略优先量词优先选择"忽略"，匹配优先量词会优先选择"匹配"。忽略优先量词必须兼顾它所限定的元素和之后的元素，效率会有一定的降低。
——————————————————————————————————————————————————————————————————————————
匹配优先量词  |  忽略优先量词 |   限定次数
——————————————————————————————————————————————————————————————————————————
     *        |       *?      | 可能出现，也可能不出现，出现次数没有上限 
——————————————————————————————————————————————————————————————————————————
     +        |       +?      | 至少出现一次，出现次数没有上限
——————————————————————————————————————————————————————————————————————————
     ?        |       ??      | 至多出现一次，也可能不出现 
——————————————————————————————————————————————————————————————————————————
   {m,n}      |      {m,n}?   | 出现次数最少为m次，最多为n次
——————————————————————————————————————————————————————————————————————————
   {m,}       |       {m,}?   | 出现次数最少为m次，没有上限
——————————————————————————————————————————————————————————————————————————
   {,n}       |       {,n}?   | 可能出现，也可能不出现，最多出现n次
——————————————————————————————————————————————————————————————————————————

匹配注释:
//.* 匹配   //xx
/\*[sS]*?\*/ 匹配 /**/ 
匹配超链接: <a\s[\s\S]+?</a>  (可以提取所有的超链接)

对于table tag:
匹配table: <table[\s>][\s\S]+?</table>
匹配tr: <tr[\s>][\s\S]+?</tr>

linux中匹配一个文件目录和文件： 如 /usr/local/bin/python
^.*/  匹配到 /usr/local/bin
[^/]*$ 匹配到python

如果需要匹配字符串{m,n}, 正则表达式需要写成\{m,n}



