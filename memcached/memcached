centos:
(一 安装)
1、yum install gcc make cmake
yum install autoconf libtool(编译安装redis)

2、memcached 依赖于 libevent 库
得先装libevent
./configure -h 看帮助文档
./configure --prefix=/usr/local/libevent 将其安装在/usr/local/libevent，而后检查我们的编译环境，是不是缺少相关库，检查
                                         有没有出错
make && make install

(clock -w)
3、安装memcached 
./configure--prefix=/usr/local/memcached --with-libevent=/usr/local/libevent(指定libevent安装目录)
make && make install


启动memcached：/usr/local/bin/memcached -d -m 256 -u root -p 11211 -P /tmp/memcached.pid
参数解释：
-d 启动守护进程(后台运行)
      -m 分配给memcache使用的内存，单位是MB
      -u 运行memcached的用户
      -l 监听的服务器IP
      -p 监听的服务器端口,默认是11211
      -P(大写) 保存Memcache的pid文件,后面跟路径 

4、启动memcached 
./memcached -u nobody -vvv

./memcached -h (查看帮助文档)
memcached 1.4.22
-p <num>      TCP port number to listen on (default: 11211) (监听的端口)
-U <num>      UDP port number to listen on (default: 11211, 0 is off)
-s <file>     UNIX socket path to listen on (disables network support)
-A            enable ascii "shutdown" command
-a <mask>     access mask for UNIX socket, in octal (default: 0700)
-l <addr>     interface to listen on (default: INADDR_ANY, all addresses)
              <addr> may be specified as host:port. If you don't specify
              a port number, the value you specified with -p or -U is
              used. You may specify multiple addresses separated by comma
              or by using -l multiple times
-d            run as a daemon(后台运行)
-r            maximize core file limit
-u <username> assume identity of <username> (only when run as root)(用哪个用户执行memcached)
-m <num>      max memory to use for items in megabytes (default: 64 MB)(分配给memcached的内存)
-M            return error on memory exhausted (rather than removing item
s)
-c <num>      max simultaneous connections (default: 1024)
-k            lock down all paged memory.  Note that there is a
              limit on how much memory you may lock.  Trying to
              allocate more than that would fail, so be sure you
              set the limit correctly for the user you started
              the daemon with (not for -u <username> user;
              under sh this is done with 'ulimit -S -l NUM_KB').
-v            verbose (print errors/warnings while in event loop)
-vv           very verbose (also print client commands/reponses)
-vvv          extremely verbose (also print internal state transitions)
-h            print this help and exit 
-i            print memcached and libevent license
-V            print version and exit
-P <file>     save PID in <file>, only used with -d option
-f <factor>   chunk size growth factor (default: 1.25)(增长因子，内存存储机制)
-n <bytes>    minimum space allocated for key+value+flags (default: 48)
-L            Try to use large memory pages (if available). Increasing
              the memory page size could reduce the number of TLB misses
              and improve the performance. In order to get large pages
              from the OS, memcached will allocate the total item-cache
              in one large chunk.
-D <char>     Use <char> as the delimiter between key prefixes and IDs.
              This is used for per-prefix stats reporting. The default is
              ":" (colon). If this option is specified, stats collection
              is turned on automatically; if not, then it may be turned on
              by sending the "stats detail on" command to the server.
-t <num>      number of threads to use (default: 4)
-R            Maximum number of requests per event, limits the number of
              requests process for a given connection to prevent 
              starvation (default: 20)
-C            Disable use of CAS
-b            Set the backlog queue limit (default: 1024)
-B            Binding protocol - one of ascii, binary, or auto (default)
-I            Override the size of each slab page. Adjusts max item size
              (default: 1mb, min: 1k, max: 128m)
-F            Disable flush_all command
-o            Comma separated list of extended or experimental options
              - (EXPERIMENTAL) maxconns_fast: immediately close new
                connections if over maxconns limit
              - hashpower: An integer multiplier for how large the hash
                table should be. Can be grown at runtime if not big enough.
                Set this based on "STAT hash_power_level" before a 
                restart.
              - tail_repair_time: Time in seconds that indicates how long to wait before
                forcefully taking over the LRU tail item whose refcount has leaked.
                The default is 3 hours.
              - hash_algorithm: The hash table algorithm
                default is jenkins hash. options: jenkins, murmur3
              - lru_crawler: Enable LRU Crawler background thread
              - lru_crawler_sleep: Microseconds to sleep between items
                default is 100.
              - lru_crawler_tocrawl: Max items to crawl per slab per run
                default is 0 (unlimited)

(二) 运行memcached
./memcached -u nobody -vvv (其他参数默认)

哈希(hash)
key-value数据库 (有了一个key值，通过一个函数就可以定位到key值所对应的保存在内存中的value值)

存数组:
array(1, 2);
objetc()
序列化成"字符串"
{1,2}

add(只能添加内存中没有添加的键值) 
get
delete
replace 
set(很霸道)

flush_all:
stats
STAT curr_items 28786    //当前存储的数据总数
STAT total_items 75441133    //启动以来存储的数据总数
惰性删除机制



  

